{"ast":null,"code":"import { EventEmitter, QueryList } from '@angular/core';\nimport { isObservable, Observable, of, Subscription } from 'rxjs';\nimport { NgWizardDataService } from '../ng-wizard-data.service';\nimport { NgWizardStep } from '../../utils/interfaces';\nimport { TOOLBAR_POSITION, STEP_STATE, STEP_STATUS, STEP_DIRECTIN, STEP_POSITION } from '../../utils/enums';\nimport { merge } from '../../utils/functions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../ng-wizard-data.service\";\nimport * as i2 from \"@angular/common\";\nfunction NgWizardComponent_li_2_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 7);\n    i0.ɵɵlistener(\"click\", function NgWizardComponent_li_2_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const step_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6._showSelectedStep($event, step_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"small\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    const i_r4 = ctx_r9.index;\n    const step_r3 = ctx_r9.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"href\", \"#step-\", i_r4, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(step_r3.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(step_r3.description);\n  }\n}\nfunction NgWizardComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵtemplate(1, NgWizardComponent_li_2_a_1_Template, 5, 3, \"a\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0._getStepCssClass(step_r3));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !step_r3.isHidden);\n  }\n}\nfunction NgWizardComponent_div_3_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_button_2_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13._showPreviousStep($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r10.styles.previousButton);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r10.config.lang.previous);\n  }\n}\nfunction NgWizardComponent_div_3_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_button_3_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15._showNextStep($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r11.styles.nextButton);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r11.config.lang.next);\n  }\n}\nfunction NgWizardComponent_div_3_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgWizardComponent_div_3_div_4_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const button_r18 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r20._extraButtonClicked(button_r18));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const button_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", button_r18.class);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(button_r18.text);\n  }\n}\nfunction NgWizardComponent_div_3_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, NgWizardComponent_div_3_div_4_button_1_Template, 2, 2, \"button\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.config.toolbarSettings.toolbarExtraButtons);\n  }\n}\nfunction NgWizardComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 8);\n    i0.ɵɵtemplate(2, NgWizardComponent_div_3_button_2_Template, 2, 2, \"button\", 9)(3, NgWizardComponent_div_3_button_3_Template, 2, 2, \"button\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, NgWizardComponent_div_3_div_4_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.styles.toolbarTop);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showPreviousButton);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showNextButton);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showExtraButtons);\n  }\n}\nfunction NgWizardComponent_div_6_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_button_2_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r25._showPreviousStep($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r22.styles.previousButton);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r22.config.lang.previous);\n  }\n}\nfunction NgWizardComponent_div_6_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_button_3_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27._showNextStep($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r23.styles.nextButton);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r23.config.lang.next);\n  }\n}\nfunction NgWizardComponent_div_6_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgWizardComponent_div_6_div_4_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const button_r30 = restoredCtx.$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r32._extraButtonClicked(button_r30));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const button_r30 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", button_r30.class);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(button_r30.text);\n  }\n}\nfunction NgWizardComponent_div_6_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, NgWizardComponent_div_6_div_4_button_1_Template, 2, 2, \"button\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r24.config.toolbarSettings.toolbarExtraButtons);\n  }\n}\nfunction NgWizardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 8);\n    i0.ɵɵtemplate(2, NgWizardComponent_div_6_button_2_Template, 2, 2, \"button\", 9)(3, NgWizardComponent_div_6_button_3_Template, 2, 2, \"button\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, NgWizardComponent_div_6_div_4_Template, 2, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.styles.toolbarBottom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showPreviousButton);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showNextButton);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showExtraButtons);\n  }\n}\nconst _c0 = [\"*\"];\nexport let NgWizardComponent = /*#__PURE__*/(() => {\n  class NgWizardComponent {\n    get pConfig() {\n      return this._pConfig || {};\n    }\n    set pConfig(config) {\n      this._pConfig = config;\n    }\n    constructor(ngWizardDataService) {\n      this.ngWizardDataService = ngWizardDataService;\n      this.stepChanged = new EventEmitter();\n      this.themeChanged = new EventEmitter();\n      this.reseted = new EventEmitter();\n      this.styles = {};\n      this.showToolbarTop = false;\n      this.showPreviousButton = false;\n      this.showNextButton = false;\n      this.showToolbarBottom = false;\n      this.showExtraButtons = false;\n      this.currentStepIndex = null; // Active step index\n    }\n\n    ngAfterContentInit() {\n      this._backupStepStates();\n      this._init();\n      // Set toolbar\n      this._setToolbar();\n      // Assign plugin events\n      this._setEvents();\n      this.resetWizardWatcher = this.ngWizardDataService.resetWizard$.subscribe(() => this._reset());\n      this.showNextStepWatcher = this.ngWizardDataService.showNextStep$.subscribe(() => this._showNextStep());\n      this.showPreviousStepWatcher = this.ngWizardDataService.showPreviousStep$.subscribe(() => this._showPreviousStep());\n      this.showStepWatcher = this.ngWizardDataService.showStep$.subscribe(index => this._showStep(index));\n      this.setThemeWatcher = this.ngWizardDataService.setTheme$.subscribe(theme => this._setTheme(theme));\n    }\n    _init() {\n      // set config\n      const defaultConfig = this.ngWizardDataService.getDefaultConfig();\n      this.config = merge(defaultConfig, this.pConfig);\n      // set step states\n      this._initSteps();\n      // Set the elements\n      this._initStyles();\n      // Show the initial step\n      this._showStep(this.config.selected);\n    }\n    _initSteps() {\n      this.steps.forEach((step, index) => {\n        step.index = index;\n        step.status = step.status || STEP_STATUS.untouched;\n        step.state = step.state || STEP_STATE.normal;\n      });\n      // Mark previous steps of the active step as done\n      if (this.config.selected > 0 && this.config.anchorSettings.markDoneStep && this.config.anchorSettings.markAllPreviousStepsAsDone) {\n        this.steps.forEach(step => {\n          if (step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden) {\n            step.status = step.index < this.config.selected ? STEP_STATUS.done : step.status;\n          }\n        });\n      }\n    }\n    _backupStepStates() {\n      this.steps.forEach(step => {\n        step.initialStatus = step.status;\n        step.initialState = step.state;\n      });\n    }\n    _restoreStepStates() {\n      this.steps.forEach(step => {\n        step.status = step.initialStatus;\n        step.state = step.initialState;\n      });\n    }\n    // PRIVATE FUNCTIONS\n    _initStyles() {\n      // Set the main element\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n      // Set anchor elements\n      this.styles.step = 'nav-item'; // li\n      // Make the anchor clickable\n      if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n        this.styles.step += ' clickable';\n      }\n      // Set the toolbar styles\n      this.styles.toolbarTop = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-top justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;\n      this.styles.toolbarBottom = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-bottom justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;\n      // Set previous&next buttons\n      this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n      this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n    }\n    _setToolbar() {\n      this.showToolbarTop = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.top || this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n      this.showToolbarBottom = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.bottom || this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;\n      this.showPreviousButton = this.config.toolbarSettings.showPreviousButton;\n      this.showNextButton = this.config.toolbarSettings.showNextButton;\n      this.showExtraButtons = this.config.toolbarSettings.toolbarExtraButtons && this.config.toolbarSettings.toolbarExtraButtons.length > 0;\n    }\n    _setEvents() {\n      // TODO: keyNavigation\n      // Keyboard navigation event\n      if (this.config.keyNavigation) {\n        // $(document).keyup(function (e) {\n        //   mi._keyNav(e);\n        // });\n      }\n    }\n    _getStepCssClass(selectedStep) {\n      let stepClass = this.styles.step;\n      switch (selectedStep.state) {\n        case STEP_STATE.disabled:\n          stepClass += ' disabled';\n          break;\n        case STEP_STATE.error:\n          stepClass += ' danger';\n          break;\n        case STEP_STATE.hidden:\n          stepClass += ' hidden';\n          break;\n      }\n      switch (selectedStep.status) {\n        case STEP_STATUS.done:\n          stepClass += ' done';\n          break;\n        case STEP_STATUS.active:\n          stepClass += ' active';\n          break;\n      }\n      return stepClass;\n    }\n    _showSelectedStep(event, selectedStep) {\n      event.preventDefault();\n      if (!this.config.anchorSettings.anchorClickable) {\n        return;\n      }\n      if (!this.config.anchorSettings.enableAnchorOnDoneStep && selectedStep.status == STEP_STATUS.done) {\n        return true;\n      }\n      if (selectedStep.index != this.currentStepIndex) {\n        if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {\n          this._showStep(selectedStep.index);\n        } else {\n          if (selectedStep.status == STEP_STATUS.done) {\n            this._showStep(selectedStep.index);\n          }\n        }\n      }\n    }\n    _showNextStep(event) {\n      if (event) {\n        event.preventDefault();\n      }\n      // Find the next not disabled & hidden step\n      const filteredSteps = this.steps.filter(step => {\n        return step.index > (this.currentStepIndex == null ? -1 : this.currentStepIndex) && step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden;\n      });\n      if (filteredSteps.length == 0) {\n        if (!this.config.cycleSteps) {\n          return;\n        }\n        this._showStep(0);\n      } else {\n        this._showStep(filteredSteps.shift().index);\n      }\n    }\n    _showPreviousStep(event) {\n      if (event) {\n        event.preventDefault();\n      }\n      // Find the previous not disabled & hidden step\n      const filteredSteps = this.steps.filter(step => {\n        return step.index < (this.currentStepIndex == null && this.config.cycleSteps ? this.steps.length : this.currentStepIndex) && step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden;\n      });\n      if (filteredSteps.length == 0) {\n        if (!this.config.cycleSteps) {\n          return;\n        }\n        this._showStep(this.steps.length - 1);\n      } else {\n        this._showStep(filteredSteps.pop().index);\n      }\n    }\n    _showStep(selectedStepIndex) {\n      // If step not found, skip\n      if (selectedStepIndex >= this.steps.length || selectedStepIndex < 0) {\n        return;\n      }\n      // If current step is requested again, skip\n      if (selectedStepIndex == this.currentStepIndex) {\n        return;\n      }\n      const selectedStep = this.steps.toArray()[selectedStepIndex];\n      // If it is a disabled or hidden step, skip\n      if (selectedStep.state == STEP_STATE.disabled || selectedStep.state == STEP_STATE.hidden) {\n        return;\n      }\n      this._showLoader();\n      return this._isStepChangeValid(selectedStep, this.currentStep && this.currentStep.canExit).toPromise().then(isValid => {\n        if (isValid) {\n          return this._isStepChangeValid(selectedStep, selectedStep.canEnter).toPromise();\n        }\n        return of(isValid).toPromise();\n      }).then(isValid => {\n        if (isValid) {\n          // Load step content\n          this._loadStepContent(selectedStep);\n        }\n      }).finally(() => this._hideLoader());\n    }\n    _isStepChangeValid(selectedStep, condition) {\n      if (typeof condition === typeof true) {\n        return of(condition);\n      } else if (condition instanceof Function) {\n        const direction = this._getStepDirection(selectedStep.index);\n        const result = condition({\n          direction,\n          fromStep: this.currentStep,\n          toStep: selectedStep\n        });\n        if (isObservable(result)) {\n          return result;\n        } else if (typeof result === typeof true) {\n          return of(result);\n        } else {\n          return of(false);\n        }\n      }\n      return of(true);\n    }\n    _loadStepContent(selectedStep) {\n      // Update controls\n      this._setAnchor(selectedStep);\n      // Set the buttons based on the step\n      this._setButtons(selectedStep.index);\n      // Trigger \"stepChanged\" event\n      const args = {\n        step: selectedStep,\n        previousStep: this.currentStep,\n        direction: this._getStepDirection(selectedStep.index),\n        position: this._getStepPosition(selectedStep.index)\n      };\n      this.stepChanged.emit(args);\n      this.ngWizardDataService.stepChanged(args);\n      // Update the current index\n      this.currentStepIndex = selectedStep.index;\n      this.currentStep = selectedStep;\n    }\n    _setAnchor(selectedStep) {\n      // Current step anchor > Remove other classes and add done class\n      if (this.currentStep) {\n        this.currentStep.status = STEP_STATUS.untouched;\n        if (this.config.anchorSettings.markDoneStep) {\n          this.currentStep.status = STEP_STATUS.done;\n          if (this.config.anchorSettings.removeDoneStepOnNavigateBack) {\n            this.steps.forEach(step => {\n              if (step.index > selectedStep.index) {\n                step.status = STEP_STATUS.untouched;\n              }\n            });\n          }\n        }\n      }\n      // Next step anchor > Remove other classes and add active class\n      selectedStep.status = STEP_STATUS.active;\n    }\n    _setButtons(index) {\n      // Previous/Next Button enable/disable based on step\n      if (!this.config.cycleSteps) {\n        if (0 >= index) {\n          this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev disabled';\n        } else {\n          this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';\n        }\n        if (this.steps.length - 1 <= index) {\n          this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next disabled';\n        } else {\n          this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';\n        }\n      }\n    }\n    _extraButtonClicked(button) {\n      if (button.event) {\n        button.event();\n      }\n    }\n    // HELPER FUNCTIONS\n    _keyNav(event) {\n      // Keyboard navigation\n      switch (event.which) {\n        case 37:\n          // left\n          this._showPreviousStep(event);\n          event.preventDefault();\n          break;\n        case 39:\n          // right\n          this._showNextStep(event);\n          event.preventDefault();\n          break;\n        default:\n          return;\n        // exit this handler for other keys\n      }\n    }\n\n    _showLoader() {\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';\n    }\n    _hideLoader() {\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n    }\n    _getStepDirection(selectedStepIndex) {\n      return this.currentStepIndex != null && this.currentStepIndex != selectedStepIndex ? this.currentStepIndex < selectedStepIndex ? STEP_DIRECTIN.forward : STEP_DIRECTIN.backward : null;\n    }\n    _getStepPosition(selectedStepIndex) {\n      return selectedStepIndex == 0 ? STEP_POSITION.first : selectedStepIndex == this.steps.length - 1 ? STEP_POSITION.final : STEP_POSITION.middle;\n    }\n    // PUBLIC FUNCTIONS\n    _setTheme(theme) {\n      if (this.config.theme == theme) {\n        return false;\n      }\n      this.config.theme = theme;\n      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;\n      // Trigger \"themeChanged\" event\n      this.themeChanged.emit(this.config.theme);\n    }\n    _reset() {\n      // Reset all elements and classes\n      this.currentStepIndex = null;\n      this.currentStep = null;\n      this._restoreStepStates();\n      this._init();\n      // Trigger \"reseted\" event\n      this.reseted.emit();\n    }\n    ngOnDestroy() {\n      if (this.resetWizardWatcher) {\n        this.resetWizardWatcher.unsubscribe();\n      }\n      if (this.showNextStepWatcher) {\n        this.showNextStepWatcher.unsubscribe();\n      }\n      if (this.showPreviousStepWatcher) {\n        this.showPreviousStepWatcher.unsubscribe();\n      }\n      if (this.showStepWatcher) {\n        this.showStepWatcher.unsubscribe();\n      }\n      if (this.setThemeWatcher) {\n        this.setThemeWatcher.unsubscribe();\n      }\n    }\n    static #_ = this.ɵfac = function NgWizardComponent_Factory(t) {\n      return new (t || NgWizardComponent)(i0.ɵɵdirectiveInject(i1.NgWizardDataService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NgWizardComponent,\n      selectors: [[\"ng-wizard\"]],\n      contentQueries: function NgWizardComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgWizardStep, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.steps = _t);\n        }\n      },\n      inputs: {\n        pConfig: [\"config\", \"pConfig\"]\n      },\n      outputs: {\n        stepChanged: \"stepChanged\",\n        themeChanged: \"themeChanged\",\n        reseted: \"reseted\"\n      },\n      ngContentSelectors: _c0,\n      decls: 7,\n      vars: 4,\n      consts: [[\"id\", \"ngwizard\", 3, \"ngClass\"], [1, \"nav\", \"nav-tabs\", \"step-anchor\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"ng-wizard-container\", \"tab-content\"], [3, \"ngClass\"], [\"class\", \"nav-link\", 3, \"href\", \"click\", 4, \"ngIf\"], [1, \"nav-link\", 3, \"href\", \"click\"], [\"role\", \"group\", 1, \"btn-group\", \"mr-2\", \"ng-wizard-btn-group\"], [\"type\", \"button\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"btn-group mr-2 ng-wizard-btn-group-extra\", \"role\", \"group\", 4, \"ngIf\"], [\"type\", \"button\", 3, \"ngClass\", \"click\"], [\"role\", \"group\", 1, \"btn-group\", \"mr-2\", \"ng-wizard-btn-group-extra\"], [\"type\", \"button\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"]],\n      template: function NgWizardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\", 1);\n          i0.ɵɵtemplate(2, NgWizardComponent_li_2_Template, 2, 2, \"li\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, NgWizardComponent_div_3_Template, 5, 4, \"div\", 3);\n          i0.ɵɵelementStart(4, \"div\", 4);\n          i0.ɵɵprojection(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, NgWizardComponent_div_6_Template, 5, 4, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", ctx.styles.main);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.steps);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showToolbarTop);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.showToolbarBottom);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf]\n    });\n  }\n  return NgWizardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}